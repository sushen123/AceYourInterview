// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MockInterview {
  mockId String @id @default(uuid())
  jsonMockResponse String
  jobPosition String
  jobDescriptoin String
  jobExperience String
  createdBy String
  createdAt DateTime @default(now())
  userAnswer UserAnswer[]
  codingExcercise CodingExcercise[]
}

model UserAnswer {
  id                       Int            @id @default(autoincrement())
  mockId                   String         
  question                 String
  correctAnswer            String
  userAnswer               String
  
  // Ratings
  overallRating            Int
  contentRating            Int
  clarityRating            Int
  relevanceRating          Int
  confidenceRating         Int
  problemSolvingRating     Int?           // Nullable for non-problem-solving questions
  technicalRating          Int?           // Nullable for non-technical questions
  behavioralInsightRating  Int?           // Nullable for non-behavioral questions
  situationalJudgmentRating Int?          // Nullable for non-situational questions

  // Feedback
  contentFeedback          String
  clarityFeedback          String
  relevanceFeedback        String
  confidenceFeedback       String
  problemSolvingFeedback   String?        // Nullable for non-problem-solving questions
  technicalFeedback        String?        // Nullable for non-technical questions
  behavioralInsightFeedback String?       // Nullable for non-behavioral questions
  situationalJudgmentFeedback String?     // Nullable for non-situational questions
  
  userEmail                String
  createdAt                DateTime       @default(now())

  mockInterview            MockInterview  @relation(fields: [mockId], references: [mockId])
}


model CodingExcercise {
  id Int @id @default(autoincrement())
  mockId String
  question String
  sourcCode String
  correctness String
  deviations String
  edgeCases String
  spaceComplexity String
  timeComplexity String
  userEmail String
  rate Int
  createAt DateTime  @default(now())
  mockInterview         MockInterview @relation(fields: [mockId], references: [mockId])
}